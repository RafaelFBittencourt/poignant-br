    - >
      Let's install the very latest Ruby on your computer so you can follow all the examples
      in the (Poignant) Guide and actually do things right now!  (Yes, things!)


      * If you are using *Microsoft Windows*, begin by downloading the "Ruby Installer for
      Windows":http://rubyforge.org/frs/?group_id=167.  Running this "one-click" installer will
      setup Ruby for you, as well as a tidy pack of useful software, such as a small text editor and some
      additional libraries.

      * If you are on Apple's *Mac OS X*, then Ruby might already be installed.  Versions 10.2 and
      10.3 of OS X both came with Ruby.  Still, I encourage you to upgrade Ruby so that all the examples
      in this book will work for you.  Download a *stable* "disk image":http://homepage.mac.com/discord/Ruby/.
      You will need OS X 10.3 (Panther) and the XCode Tools in order to use this image.

      * On *FreeBSD*, Ruby is right there in the ports system.  In fact, if you've used the essential
      @portupgrade@ tool, then Ruby is already installed.  Akinori Musha, one of Ruby's immensely
      talented core developers, wrote portupgrade, which means that you can use your Ruby learning
      right away to hack up your @pkgtools.conf@.

      _* <pre class="text">
       cd /usr/ports/lang/ruby18
       sudo make install
      </pre>

      * On *RedHat* or *Mandrake* Linux, you can find "Ruby RPMs":http://rpmfind.net/linux/rpm2html/search.php?query=Ruby.
      I believe Ruby is also available through Ximian's Red Carpet.

      * On *Debian*, use @apt-get install ruby@.

      * On *Gentoo*, @emerge ruby@.

      * Other *Linux* and *UNIX* platforms, even *OS X* (if the disk images don't work for you): 
      Download the "latest source code":http://ruby-lang.org/en/20020102.html.  
      For instance, "Ruby 1.8.3":ftp://ftp.ruby-lang.org/pub/ruby/ruby-1.8.3.tar.gz.  To unpack and compile:

      _* <pre class="text">
       tar xzvf ruby-1.8.3.tar.gz
       cd ruby-1.8.3
       ./configure
       make
       make install
      </pre>

      _* (Again, the above commands are for installing Ruby from the source code.  You may need to use
      @su@ or @sudo@ to give you permission to run the @make install@.)


      To test if Ruby is installed, open a command shell and run: @ruby -v@.  If Ruby is installed
      properly, you'll see a bit of version info.


      <pre class="text">
       ruby 1.8.3 (2005-11-25) [i386-mswin32]
      </pre>


      * To open a command shell in *Microsoft Windows*, go to the Start Menu and select @Run...@.
      Type in: @cmd@.  Press OK.  A command shell window will appear.

      * To open a command shell on *Mac OS X*, go to *Applications > Utilities*.  Run the *Terminal*
      program.

 
      Okay, keep that command shell open cause we'll need it if the Earth gets rescued from its
      plummet toward the sun.


      !i/tigers.vest-2.gif(Tiger saves Earth with Ice Gun.  Girl robot zooms around tuxed shop...)!


      Ruby comes with a very, very, very extremely helpful tool called *Irb*.  Interactive Ruby.
      In your command shell, type: @irb@.


      <pre>
       irb(main):001:0>
      </pre>


      You should see the prompt above.  This Irb prompt will allow you to enter Ruby code and,
      upon pressing _Enter_, the code will run.


      So, at the Irb prompt, do a: @3000 + 500@.


      <pre>
       irb(main):001:0> 3000 + 500
       => 3500
       irb(main):002:0>      
      </pre>
      

      The example @3000 + 500@ is legitimate code.  We're just not assigning the answer to a variable.
      Which is okay in Irb, because Irb prints the answer given back by code you run.


      Irb is a great calculator.


      <pre>
       irb(main):002:0> ( ( 220.00 + 34.15 ) * 1.08 ) / 12
       => 22.8735
       irb(main):003:0> "1011010".to_i( 2 )
       => 90
       irb(main):004:0> Time.now - Time.local( 2003, "Jul", 31, 8, 10, 0 )
       => 31119052.510118
      </pre>


      The first example demonstrates a bit of math and is read as: _220.00 plus 34.15 times 1.08 divided by 12_.
      The second example takes a binary string and converts it to a decimal number.  The third example computes
      the number of seconds between @now@ and July 31, 2003 at 8:10 AM.  The answers to all of these are
      printed back to us by Irb with a little ASCII arrow pointing.
